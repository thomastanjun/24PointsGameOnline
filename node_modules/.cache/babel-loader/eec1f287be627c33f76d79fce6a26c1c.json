{"ast":null,"code":"var _jsxFileName = \"/Users/tanjun/Downloads/24PointsGameOnline/frontend/src/pages/ModeSelection.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  padding: 20px;\n`;\n_c = Container;\nconst Title = styled.h2`\n  font-size: 32px;\n  color: #1a1a1b;\n  margin-bottom: 30px;\n`;\n_c2 = Title;\nconst ModeButton = styled.button`\n  width: 200px;\n  padding: 20px;\n  margin: 10px;\n  font-size: 18px;\n  font-weight: bold;\n  background: white;\n  border: 2px solid #d3d6da;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.2s;\n\n  &:hover {\n    background: #f4f4f4;\n    transform: translateY(-2px);\n  }\n`;\n_c3 = ModeButton;\nconst ModeDescription = styled.p`\n  font-size: 14px;\n  color: #666;\n  margin-top: 5px;\n`;\n_c4 = ModeDescription;\nconst ModeSelection = () => {\n  _s();\n  var _location$state;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const gameClient = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.gameClient;\n  const handleModeSelect = isSinglePlayer => {\n    navigate('/game/single', {\n      state: {\n        gameClient,\n        mode: 'single'\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Select Game Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ModeButton, {\n        onClick: () => handleModeSelect(true),\n        children: [\"Single Player\", /*#__PURE__*/_jsxDEV(ModeDescription, {\n          children: \"Practice by yourself\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModeButton, {\n        onClick: () => handleModeSelect(false),\n        children: [\"Multiplayer\", /*#__PURE__*/_jsxDEV(ModeDescription, {\n          children: \"Compete with other players\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(ModeSelection, \"VDZHUspDq9N5O9RWjniBrjgIdAA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c5 = ModeSelection;\nexport default ModeSelection;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"ModeButton\");\n$RefreshReg$(_c4, \"ModeDescription\");\n$RefreshReg$(_c5, \"ModeSelection\");","map":{"version":3,"names":["React","useNavigate","useLocation","styled","jsxDEV","_jsxDEV","Container","div","_c","Title","h2","_c2","ModeButton","button","_c3","ModeDescription","p","_c4","ModeSelection","_s","_location$state","navigate","location","gameClient","state","handleModeSelect","isSinglePlayer","mode","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c5","$RefreshReg$"],"sources":["/Users/tanjun/Downloads/24PointsGameOnline/frontend/src/pages/ModeSelection.tsx"],"sourcesContent":["import React from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { ClientState } from '../types/ClientState';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  padding: 20px;\n`;\n\nconst Title = styled.h2`\n  font-size: 32px;\n  color: #1a1a1b;\n  margin-bottom: 30px;\n`;\n\nconst ModeButton = styled.button`\n  width: 200px;\n  padding: 20px;\n  margin: 10px;\n  font-size: 18px;\n  font-weight: bold;\n  background: white;\n  border: 2px solid #d3d6da;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.2s;\n\n  &:hover {\n    background: #f4f4f4;\n    transform: translateY(-2px);\n  }\n`;\n\nconst ModeDescription = styled.p`\n  font-size: 14px;\n  color: #666;\n  margin-top: 5px;\n`;\n\n\nconst ModeSelection: React.FC = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const gameClient = (location.state as ClientState)?.gameClient;\n\n\n  const handleModeSelect = (isSinglePlayer: boolean) => {\n    navigate('/game/single', {\n       state: { \n        gameClient,\n        mode: 'single' } });\n  };\n\n  return (\n    <Container>\n      <Title>Select Game Mode</Title>\n      <div>\n        <ModeButton onClick={() => handleModeSelect(true)}>\n          Single Player\n          <ModeDescription>Practice by yourself</ModeDescription>\n        </ModeButton>\n        \n        <ModeButton onClick={() => handleModeSelect(false)}>\n          Multiplayer\n          <ModeDescription>Compete with other players</ModeDescription>\n        </ModeButton>\n      </div>\n    </Container>\n  );\n};\n\nexport default ModeSelection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}