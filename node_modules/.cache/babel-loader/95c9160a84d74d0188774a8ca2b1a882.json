{"ast":null,"code":"var _jsxFileName = \"/Users/tanjun/Downloads/24PointsGameOnline/frontend/src/pages/RoomSelection.tsx\",\n  _s = $RefreshSig$();\nimport styled from 'styled-components';\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { GameClientContext } from '../contexts/GameClientContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n`;\n_c = Container;\nconst RoomList = styled.div`\n  width: 100%;\n  max-width: 600px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n_c2 = RoomList;\nconst RoomCard = styled.div`\n  padding: 15px;\n  border: 1px solid #d3d6da;\n  border-radius: 8px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  \n  &:hover {\n    background: #f4f4f4;\n  }\n`;\n_c3 = RoomCard;\nconst Button = styled.button`\n  padding: 10px 20px;\n  border: none;\n  border-radius: 4px;\n  background: #6aaa64;\n  color: white;\n  cursor: pointer;\n  \n  &:hover {\n    background: #5c935c;\n  }\n`;\n_c4 = Button;\nconst RoomSelection = () => {\n  _s();\n  const navigate = useNavigate();\n  const [rooms, setRooms] = useState([]);\n  const {\n    client\n  } = useContext(GameClientContext);\n  useEffect(() => {\n    let interval;\n    if (client) {\n      try {\n        interval = setInterval(async () => {\n          const response = await client.fetchRooms();\n          if (response.status === 'Empty') {\n            setRooms([]);\n            return;\n          } else {\n            console.log(\"RoomList: \", response.status);\n            setRooms(response.roomList);\n          }\n        }, 1000);\n      } catch (error) {\n        console.error('Error fetching rooms:', error);\n      }\n      return () => clearInterval(interval);\n    }\n  }, [client]);\n  const handleRoomClick = async roomID => {\n    if (!client) return;\n    try {\n      const response = await client.joinGame(roomID);\n      navigate(`/game/multi/${roomID}`);\n    } catch (error) {\n      console.error('Error joining room:', error);\n    }\n  };\n  const createRoom = async maxPlayer => {\n    if (!client) return;\n    try {\n      const response = await client.createRoom(maxPlayer);\n      navigate('/game/single', {\n        state: {\n          mode: 'single'\n        }\n      });\n    } catch (error) {\n      console.error('Error creating room:', error);\n    }\n  };\n  const renderRooms = () => {\n    if (!Array.isArray(rooms)) {\n      console.log(\"Rooms is not an array:\", rooms); // Debug\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading rooms...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 14\n      }, this);\n    }\n    if (rooms.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No rooms available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 14\n      }, this);\n    }\n    return rooms.map(room => /*#__PURE__*/_jsxDEV(RoomCard, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Room \", room.roomID]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Host: \", room.hostPlayer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Available Seats: \", room.vacancySeats]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleRoomClick(room.roomID),\n        children: \"Join Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, room.roomID, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Game Rooms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => createRoom(\"4\"),\n      children: \"Create New Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RoomList, {\n      children: renderRooms()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(RoomSelection, \"t1jlxYl65FjQoDFk77PByFVMydY=\", false, function () {\n  return [useNavigate];\n});\n_c5 = RoomSelection;\nexport default RoomSelection;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"RoomList\");\n$RefreshReg$(_c3, \"RoomCard\");\n$RefreshReg$(_c4, \"Button\");\n$RefreshReg$(_c5, \"RoomSelection\");","map":{"version":3,"names":["styled","React","useState","useEffect","useContext","useNavigate","GameClientContext","jsxDEV","_jsxDEV","Container","div","_c","RoomList","_c2","RoomCard","_c3","Button","button","_c4","RoomSelection","_s","navigate","rooms","setRooms","client","interval","setInterval","response","fetchRooms","status","console","log","roomList","error","clearInterval","handleRoomClick","roomID","joinGame","createRoom","maxPlayer","state","mode","renderRooms","Array","isArray","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","room","hostPlayer","vacancySeats","onClick","_c5","$RefreshReg$"],"sources":["/Users/tanjun/Downloads/24PointsGameOnline/frontend/src/pages/RoomSelection.tsx"],"sourcesContent":["\nimport styled from 'styled-components';\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport GameClient from '../services/GameClient';\nimport { GameClientContext } from '../contexts/GameClientContext';\nimport {Rooms, RoomInfo} from '../GameDefinitions';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n`;\n\nconst RoomList = styled.div`\n  width: 100%;\n  max-width: 600px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nconst RoomCard = styled.div`\n  padding: 15px;\n  border: 1px solid #d3d6da;\n  border-radius: 8px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  \n  &:hover {\n    background: #f4f4f4;\n  }\n`;\n\nconst Button = styled.button`\n  padding: 10px 20px;\n  border: none;\n  border-radius: 4px;\n  background: #6aaa64;\n  color: white;\n  cursor: pointer;\n  \n  &:hover {\n    background: #5c935c;\n  }\n`;\n\nconst RoomSelection: React.FC = () => {\n  const navigate = useNavigate();\n  const [rooms, setRooms] = useState<RoomInfo[]>([]);\n  const { client } = useContext(GameClientContext);\n\n  useEffect(() => {\n    let interval: NodeJS.Timeout;\n\n    if (client) {\n      try{\n      interval = setInterval(async () => {\n        const response = await client.fetchRooms();\n        if (response.status === 'Empty') {\n          setRooms([]);\n          return;\n        } else {\n          console.log(\"RoomList: \", response.status);\n          setRooms(response.roomList);}\n      }, 1000);}\n      catch (error) {\n        console.error('Error fetching rooms:', error);\n      }\n      return () => clearInterval(interval);\n    }\n  }, [client]);\n\n  const handleRoomClick = async (roomID: string) => {\n    if (!client) return;\n    try {\n      const response = await client.joinGame(roomID);\n      navigate(`/game/multi/${roomID}`);\n    } catch (error) {\n      console.error('Error joining room:', error);\n    }\n  };\n\n  const createRoom = async (maxPlayer: string) => {\n    if (!client) return;\n    try {\n      const response = await client.createRoom(maxPlayer);\n      navigate('/game/single', {\n        state: { \n         mode: 'single' } });\n\n    } catch (error) {\n      console.error('Error creating room:', error);\n    }\n  };\n\n  const renderRooms = () => {\n    if (!Array.isArray(rooms)) {\n      console.log(\"Rooms is not an array:\", rooms); // Debug\n      return <p>Loading rooms...</p>;\n    }\n\n    if (rooms.length === 0) {\n      return <p>No rooms available</p>;\n    }\n    return rooms.map((room: RoomInfo) => (\n      <RoomCard key={room.roomID}>\n        <div>\n          <h3>Room {room.roomID}</h3>\n          <p>Host: {room.hostPlayer}</p>\n          <p>Available Seats: {room.vacancySeats}</p>\n        </div>\n        <Button onClick={() => handleRoomClick(room.roomID)}>\n          Join Room\n        </Button>\n      </RoomCard>\n    ));\n  };\n\n\n  return (\n    <Container>\n      <h1>Game Rooms</h1>\n      <Button onClick={() => createRoom(\"4\")}>Create New Room</Button>\n      \n      <RoomList>\n        {renderRooms()}\n      </RoomList>\n    </Container>\n  );\n};\n\nexport default RoomSelection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}