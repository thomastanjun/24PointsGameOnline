{"ast":null,"code":"var _jsxFileName = \"/Users/tanjun/Downloads/24PointsGameOnline/frontend/src/pages/RoomSelection.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n`;\n_c = Container;\nconst RoomList = styled.div`\n  width: 100%;\n  max-width: 600px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n_c2 = RoomList;\nconst RoomCard = styled.div`\n  padding: 15px;\n  border: 1px solid #d3d6da;\n  border-radius: 8px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  \n  &:hover {\n    background: #f4f4f4;\n  }\n`;\n_c3 = RoomCard;\nconst Button = styled.button`\n  padding: 10px 20px;\n  border: none;\n  border-radius: 4px;\n  background: #6aaa64;\n  color: white;\n  cursor: pointer;\n  \n  &:hover {\n    background: #5c935c;\n  }\n`;\n_c4 = Button;\nconst RoomSelection = () => {\n  _s();\n  const navigate = useNavigate();\n  const [rooms, setRooms] = useState([]);\n  useEffect(() => {\n    const fetchRooms = async () => {\n      try {\n        const response = await fetch('/api/rooms');\n        const data = await response.json();\n        setRooms(data);\n      } catch (error) {\n        console.error('Error fetching rooms:', error);\n      }\n    };\n    fetchRooms();\n  }, []);\n  const createRoom = async () => {\n    try {\n      const response = await fetch('/api/room', {\n        method: 'POST',\n        body: JSON.stringify({\n          singlePlayer: false\n        })\n      });\n      const roomId = await response.text();\n      navigate(`/game/multi/${roomId}`);\n    } catch (error) {\n      console.error('Error creating room:', error);\n    }\n  };\n  const joinRoom = roomId => {\n    navigate(`/game/multi/${roomId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Game Rooms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: createRoom,\n      children: \"Create New Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RoomList, {\n      children: rooms.map(room => /*#__PURE__*/_jsxDEV(RoomCard, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Room \", room.roomId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Players: \", room.playerCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => joinRoom(room.roomId),\n          children: \"Join Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, room.roomId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(RoomSelection, \"3qn6HAPSa8yRLNAW4g1T+4ectnQ=\", false, function () {\n  return [useNavigate];\n});\n_c5 = RoomSelection;\nexport default RoomSelection;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"RoomList\");\n$RefreshReg$(_c3, \"RoomCard\");\n$RefreshReg$(_c4, \"Button\");\n$RefreshReg$(_c5, \"RoomSelection\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","styled","jsxDEV","_jsxDEV","Container","div","_c","RoomList","_c2","RoomCard","_c3","Button","button","_c4","RoomSelection","_s","navigate","rooms","setRooms","fetchRooms","response","fetch","data","json","error","console","createRoom","method","body","JSON","stringify","singlePlayer","roomId","text","joinRoom","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","room","playerCount","_c5","$RefreshReg$"],"sources":["/Users/tanjun/Downloads/24PointsGameOnline/frontend/src/pages/RoomSelection.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n`;\n\nconst RoomList = styled.div`\n  width: 100%;\n  max-width: 600px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nconst RoomCard = styled.div`\n  padding: 15px;\n  border: 1px solid #d3d6da;\n  border-radius: 8px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  \n  &:hover {\n    background: #f4f4f4;\n  }\n`;\n\nconst Button = styled.button`\n  padding: 10px 20px;\n  border: none;\n  border-radius: 4px;\n  background: #6aaa64;\n  color: white;\n  cursor: pointer;\n  \n  &:hover {\n    background: #5c935c;\n  }\n`;\n\ninterface Room {\n  roomId: string;\n  playerCount: number;\n}\n\nconst RoomSelection: React.FC = () => {\n  const navigate = useNavigate();\n  const [rooms, setRooms] = useState<Room[]>([]);\n\n  useEffect(() => {\n    const fetchRooms = async () => {\n      try {\n        const response = await fetch('/api/rooms');\n        const data = await response.json();\n        setRooms(data);\n      } catch (error) {\n        console.error('Error fetching rooms:', error);\n      }\n    };\n\n    fetchRooms();\n  }, []);\n\n  const createRoom = async () => {\n    try {\n      const response = await fetch('/api/room', { \n        method: 'POST',\n        body: JSON.stringify({ singlePlayer: false })\n      });\n      const roomId = await response.text();\n      navigate(`/game/multi/${roomId}`);\n    } catch (error) {\n      console.error('Error creating room:', error);\n    }\n  };\n\n  const joinRoom = (roomId: string) => {\n    navigate(`/game/multi/${roomId}`);\n  };\n\n  return (\n    <Container>\n      <h1>Game Rooms</h1>\n      <Button onClick={createRoom}>Create New Room</Button>\n      \n      <RoomList>\n        {rooms.map(room => (\n          <RoomCard key={room.roomId}>\n            <div>\n              <h3>Room {room.roomId}</h3>\n              <p>Players: {room.playerCount}</p>\n            </div>\n            <Button onClick={() => joinRoom(room.roomId)}>\n              Join Room\n            </Button>\n          </RoomCard>\n        ))}\n      </RoomList>\n    </Container>\n  );\n};\n\nexport default RoomSelection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}