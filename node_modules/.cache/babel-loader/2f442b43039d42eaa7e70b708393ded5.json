{"ast":null,"code":"var _jsxFileName = \"/Users/tanjun/Documents/24PointsGameOnline/src/pages/ModeSelection.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useContext } from 'react';\nimport { GameClientContext } from '../contexts/GameClientContext';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useGameExit } from '../hooks/useGameExit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  padding: 20px;\n`;\n_c = Container;\nconst Title = styled.h2`\n  font-size: 32px;\n  color: #1a1a1b;\n  margin-bottom: 30px;\n`;\n_c2 = Title;\nconst ModeButton = styled.button`\n  width: 200px;\n  padding: 20px;\n  margin: 10px;\n  font-size: 18px;\n  font-weight: bold;\n  background: white;\n  border: 2px solid #d3d6da;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.2s;\n\n  &:hover {\n    background: #f4f4f4;\n    transform: translateY(-2px);\n  }\n`;\n_c3 = ModeButton;\nconst ModeDescription = styled.p`\n  font-size: 14px;\n  color: #666;\n  margin-top: 5px;\n`;\n_c4 = ModeDescription;\nconst ModeSelection = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  console.log(\"Location state: \", location.state);\n  const {\n    client\n  } = useContext(GameClientContext);\n  const handleSingleMode = async () => {\n    console.log(\"ModeSelection Player: \", client === null || client === void 0 ? void 0 : client.getPlayerName());\n    if (!client) {\n      return;\n    }\n    const roomID = await client.createRoom('1');\n    await client.joinGame(roomID);\n    navigate('/game/single', {\n      state: {\n        mode: 'single'\n      }\n    });\n  };\n  const handleMultiMode = isSinglePlayer => {\n    console.log(\"ModeSelection Player: \", client === null || client === void 0 ? void 0 : client.getPlayerName());\n    navigate('/rooms', {\n      state: {\n        mode: 'single'\n      }\n    });\n  };\n  useGameExit(client);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Select Game Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ModeButton, {\n        onClick: () => handleSingleMode(),\n        children: [\"Single Player\", /*#__PURE__*/_jsxDEV(ModeDescription, {\n          children: \"Practice by yourself\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModeButton, {\n        onClick: () => handleMultiMode(false),\n        children: [\"Multiplayer\", /*#__PURE__*/_jsxDEV(ModeDescription, {\n          children: \"Compete with other players\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(ModeSelection, \"lgUbOGHfHzUqQAz9Qknp/rUFfUc=\", false, function () {\n  return [useNavigate, useLocation, useGameExit];\n});\n_c5 = ModeSelection;\nexport default ModeSelection;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"ModeButton\");\n$RefreshReg$(_c4, \"ModeDescription\");\n$RefreshReg$(_c5, \"ModeSelection\");","map":{"version":3,"names":["React","useContext","GameClientContext","useNavigate","useLocation","styled","useGameExit","jsxDEV","_jsxDEV","Container","div","_c","Title","h2","_c2","ModeButton","button","_c3","ModeDescription","p","_c4","ModeSelection","_s","navigate","location","console","log","state","client","handleSingleMode","getPlayerName","roomID","createRoom","joinGame","mode","handleMultiMode","isSinglePlayer","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c5","$RefreshReg$"],"sources":["/Users/tanjun/Documents/24PointsGameOnline/src/pages/ModeSelection.tsx"],"sourcesContent":["import React from 'react';\nimport { useContext } from 'react';\nimport { GameClientContext } from '../contexts/GameClientContext';\n\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport GameClient from '../services/GameClient';\nimport { useGameExit } from '../hooks/useGameExit';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  padding: 20px;\n`;\n\nconst Title = styled.h2`\n  font-size: 32px;\n  color: #1a1a1b;\n  margin-bottom: 30px;\n`;\n\nconst ModeButton = styled.button`\n  width: 200px;\n  padding: 20px;\n  margin: 10px;\n  font-size: 18px;\n  font-weight: bold;\n  background: white;\n  border: 2px solid #d3d6da;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.2s;\n\n  &:hover {\n    background: #f4f4f4;\n    transform: translateY(-2px);\n  }\n`;\n\nconst ModeDescription = styled.p`\n  font-size: 14px;\n  color: #666;\n  margin-top: 5px;\n`;\n\n\nconst ModeSelection: React.FC = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  console.log(\"Location state: \", location.state);\n  \n  const { client } = useContext(GameClientContext);\n\n\n  const handleSingleMode = async() => {\n    console.log(\"ModeSelection Player: \", client?.getPlayerName());\n    if (!client) {\n      return;\n    }\n    const roomID = await client.createRoom('1');\n    await client.joinGame(roomID);\n    navigate('/game/single', {\n       state: { \n        mode: 'single' } });\n  };\n\n  const handleMultiMode = (isSinglePlayer: boolean) => {\n    console.log(\"ModeSelection Player: \", client?.getPlayerName());\n    navigate('/rooms', {\n       state: { \n        mode: 'single' } });\n  };\n\n  useGameExit(client);\n  \n  return (\n    <Container>\n      <Title>Select Game Mode</Title>\n      <div>\n        <ModeButton onClick={() => handleSingleMode()}>\n          Single Player\n          <ModeDescription>Practice by yourself</ModeDescription>\n        </ModeButton>\n        \n        <ModeButton onClick={() => handleMultiMode(false)}>\n          Multiplayer\n          <ModeDescription>Compete with other players</ModeDescription>\n        </ModeButton>\n      </div>\n    </Container>\n  );\n};\n\nexport default ModeSelection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}