{"ast":null,"code":"import React,{useState,useEffect,useContext}from'react';import{useNavigate}from'react-router-dom';import{GameClientContext}from'../contexts/GameClientContext';import{useGameExit}from'../hooks/useGameExit';import{NumberButton,OperatorButton,ControlButton,NumbersGrid,OperatorGrid,ButtonGroup,QuitButton}from'../components/GameButtons';import{Container,Header,Title,GameAreaSingle,CurrentPlayerAreaSingle,FormulaDisplay,ResultDisplay,WinnerDisplay,WinnerFormula,PlayerName}from'../components/GameStyles';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const GamePageSingle=()=>{const navigate=useNavigate();const{client}=useContext(GameClientContext);console.log(\"a new render\");const[playerName,setPlayerName]=useState((client===null||client===void 0?void 0:client.getPlayerName())||'');const[formula,setFormula]=useState((client===null||client===void 0?void 0:client.getCurrentPlayerFormula())||'');const[result,setResult]=useState((client===null||client===void 0?void 0:client.getCurrentPlayerResult())||'0');const[gameNumbers,setGameNumbers]=useState((client===null||client===void 0?void 0:client.getGameNumbersString())||[]);const[winner,setWinner]=useState('');const[winnerFormula,setWinnerFormula]=useState('');const[status,setStatus]=useState('false');const[isCountingDown,setIsCountingDown]=useState(false);const[count,setCount]=useState(3);const updateDisplay=client=>{setFormula(client.getCurrentPlayerFormula());setResult(client.getCurrentPlayerResult());setGameNumbers(client.getGameNumbersString());setStatus(client.getGameStatus());if(client.getWinner()){setWinner(client.getWinner());setWinnerFormula(client.getWinnerFormula());}};useEffect(()=>{let timer;if(isCountingDown&&count>1){timer=setTimeout(()=>setCount(prev=>prev-1),1000);}else if(count===1){timer=setTimeout(()=>{setIsCountingDown(false);setCount(3);// Reset for next game\n},1000);}return()=>clearTimeout(timer);},[count,isCountingDown]);const handleLogout=async()=>{if(!client)return;try{await client.exitGame();resetGameState();client.resetClient();navigate('/mode-selection');}catch(error){console.error('Error:',error);}};const resetGameState=()=>{setPlayerName('');setFormula('');setResult('0');setGameNumbers([]);setWinner('');setWinnerFormula('');};const handleNewGame=async()=>{if(!client)return;try{setIsCountingDown(true);await client.startNewGame();setWinner('');setWinnerFormula('');updateDisplay(client);}catch(error){console.error('Error:',error);}};const handleTokenClick=async token=>{if(!client)return;try{await client.addToken(token);updateDisplay(client);}catch(error){console.error('Error:',error);}};const handleRemove=async()=>{if(!client)return;try{await client.removeToken();updateDisplay(client);}catch(error){console.error('Error:',error);}};const handleClear=async()=>{if(!client)return;try{await client.clearFormula();updateDisplay(client);}catch(error){console.error('Error:',error);}};useGameExit(client);return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Header,{children:[/*#__PURE__*/_jsx(Title,{children:\"24 Game\"}),/*#__PURE__*/_jsxs(PlayerName,{children:[\"Player: \",playerName]}),/*#__PURE__*/_jsx(QuitButton,{onClick:handleLogout,children:\"Quit Game\"})]}),winner&&/*#__PURE__*/_jsxs(WinnerDisplay,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"You Solved It!\"}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Player: \",winner]}),/*#__PURE__*/_jsxs(WinnerFormula,{children:[\"Winning Formula: \",winnerFormula]})]}),/*#__PURE__*/_jsx(GameAreaSingle,{children:/*#__PURE__*/_jsxs(CurrentPlayerAreaSingle,{children:[/*#__PURE__*/_jsx(NumbersGrid,{children:isCountingDown?/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 flex items-center justify-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"text-4xl font-bold\",children:count})}):gameNumbers.map((num,index)=>/*#__PURE__*/_jsx(NumberButton,{onClick:()=>handleTokenClick(num),children:num},index))}),/*#__PURE__*/_jsx(FormulaDisplay,{children:formula||'Start building your formula'}),/*#__PURE__*/_jsxs(ResultDisplay,{children:[\"Result: \",result]}),/*#__PURE__*/_jsx(OperatorGrid,{children:['+','-','*','/','(',')'].map(op=>/*#__PURE__*/_jsx(OperatorButton,{onClick:()=>handleTokenClick(op),children:op},op))}),/*#__PURE__*/_jsxs(ButtonGroup,{children:[/*#__PURE__*/_jsx(ControlButton,{onClick:handleClear,children:\"Clear\"}),/*#__PURE__*/_jsx(ControlButton,{onClick:handleRemove,children:\"Undo\"}),/*#__PURE__*/_jsx(ControlButton,{onClick:handleNewGame,children:\"New Game\"})]})]})})]})});};export default GamePageSingle;","map":{"version":3,"names":["React","useState","useEffect","useContext","useNavigate","GameClientContext","useGameExit","NumberButton","OperatorButton","ControlButton","NumbersGrid","OperatorGrid","ButtonGroup","QuitButton","Container","Header","Title","GameAreaSingle","CurrentPlayerAreaSingle","FormulaDisplay","ResultDisplay","WinnerDisplay","WinnerFormula","PlayerName","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","GamePageSingle","navigate","client","console","log","playerName","setPlayerName","getPlayerName","formula","setFormula","getCurrentPlayerFormula","result","setResult","getCurrentPlayerResult","gameNumbers","setGameNumbers","getGameNumbersString","winner","setWinner","winnerFormula","setWinnerFormula","status","setStatus","isCountingDown","setIsCountingDown","count","setCount","updateDisplay","getGameStatus","getWinner","getWinnerFormula","timer","setTimeout","prev","clearTimeout","handleLogout","exitGame","resetGameState","resetClient","error","handleNewGame","startNewGame","handleTokenClick","token","addToken","handleRemove","removeToken","handleClear","clearFormula","children","onClick","className","map","num","index","op"],"sources":["/Users/tanjun/Documents/24PointsGameOnline/src/pages/GamePageSingle.tsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport GameClient from '../services/GameClient';\nimport { GameClientContext } from '../contexts/GameClientContext';\nimport { useGameExit } from '../hooks/useGameExit';\n\n\nimport {\n    NumberButton,\n    OperatorButton,\n    ControlButton,\n    NumbersGrid,\n    OperatorGrid,\n    ButtonGroup,\n    QuitButton,\n} from '../components/GameButtons';\n\nimport {\n    Container,\n    Header,\n    Title,\n    GameAreaSingle,\n    CurrentPlayerAreaSingle,\n    OtherPlayersArea,\n    PlayerCard,\n    PlayerHeader,\n    FormulaDisplay,\n    ResultDisplay,\n    Input,\n    WinnerDisplay,\n    WinnerFormula,\n    PlayerName,\n    GameControls\n} from '../components/GameStyles';\n\nimport { RoomInfo } from '../GameDefinitions';\n\n\nconst GamePageSingle: React.FC = () => {\n    const navigate = useNavigate();\n    const { client } = useContext(GameClientContext);\n    console.log(\"a new render\");\n\n    const [playerName, setPlayerName] = useState(client?.getPlayerName() || '');\n    const [formula, setFormula] = useState(client?.getCurrentPlayerFormula() || '');\n    const [result, setResult] = useState(client?.getCurrentPlayerResult() || '0');\n    const [gameNumbers, setGameNumbers] = useState<string[]>(client?.getGameNumbersString() || []); \n    const [winner, setWinner] = useState<string>('');\n    const [winnerFormula, setWinnerFormula] = useState<string>('');\n    const [status, setStatus] = useState<string>('false');\n\n    const [isCountingDown, setIsCountingDown] = useState(false);\n    const [count, setCount] = useState(3);\n\n    const updateDisplay = (client: GameClient) => {\n        setFormula(client.getCurrentPlayerFormula());\n        setResult(client.getCurrentPlayerResult());\n        setGameNumbers(client.getGameNumbersString());\n        setStatus(client.getGameStatus());\n\n\n        if (client.getWinner()) {\n            setWinner(client.getWinner());\n            setWinnerFormula(client.getWinnerFormula());\n        }\n    };\n\n    useEffect(() => {\n        let timer: NodeJS.Timeout;\n        if (isCountingDown && count > 1) {\n            timer = setTimeout(() => setCount(prev => prev - 1), 1000);\n        } else if (count === 1) {\n            timer = setTimeout(() => {\n                setIsCountingDown(false);\n                setCount(3); // Reset for next game\n            }, 1000);\n        }\n        return () => clearTimeout(timer);\n    }, [count, isCountingDown]);\n\n\n    const handleLogout = async () => {\n        if (!client) return;\n        try {\n            await client.exitGame();\n            resetGameState();\n            client.resetClient();\n            navigate('/mode-selection');\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    };\n\n    \n    const resetGameState = () => {\n        setPlayerName('');\n        setFormula('');\n        setResult('0');\n        setGameNumbers([]);\n        setWinner('');\n        setWinnerFormula('');\n    };\n    \n\n    const handleNewGame = async () => {\n        if (!client) return;\n        try {\n            setIsCountingDown(true);\n            await client.startNewGame();\n            setWinner('');\n            setWinnerFormula('');\n            updateDisplay(client);\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    };\n\n    const handleTokenClick = async (token: string) => {\n        if (!client) return;\n        try {\n            await client.addToken(token);\n            updateDisplay(client);\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    };\n\n    const handleRemove = async () => {\n        if (!client) return;\n        try {\n            await client.removeToken();\n            updateDisplay(client);\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    };\n    \n    const handleClear = async () => {\n        if (!client) return;\n        try {\n            await client.clearFormula();\n            updateDisplay(client);\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    };\n\n    useGameExit(client);\n\n    return (\n        <Container>\n                <>\n                    <Header>\n                        <Title>24 Game</Title>\n                        <PlayerName>Player: {playerName}</PlayerName>\n                        <QuitButton onClick={handleLogout}>Quit Game</QuitButton>\n                    </Header>\n\n                    {winner && (\n                        <WinnerDisplay>\n                            <h2>You Solved It!</h2>\n                            <div>Player: {winner}</div>\n                            <WinnerFormula>\n                                Winning Formula: {winnerFormula}\n                            </WinnerFormula>\n                        </WinnerDisplay>\n                    )}\n\n                    <GameAreaSingle>\n                        <CurrentPlayerAreaSingle>\n                            <NumbersGrid>\n                                {isCountingDown ? (\n                                    <div className=\"absolute inset-0 flex items-center justify-center\">\n                                    <div className=\"text-4xl font-bold\">{count}</div>\n                                    </div>\n                                ) : (\n                                    gameNumbers.map((num, index) => (\n                                    <NumberButton \n                                    key={index} \n                                    onClick={() => handleTokenClick(num)}\n                                    >\n                                    {num}\n                                    </NumberButton>\n                                ))\n                                )}\n       \n                            </NumbersGrid>\n\n                            <FormulaDisplay>\n                                {formula || 'Start building your formula'}\n                            </FormulaDisplay>\n\n                            <ResultDisplay>\n                                Result: {result}\n                            </ResultDisplay>\n                            \n                            <OperatorGrid>\n                                {['+', '-', '*', '/', '(', ')'].map((op) => (\n                                    <OperatorButton \n                                        key={op} \n                                        onClick={() => handleTokenClick(op)}\n                                    >\n                                        {op}\n                                    </OperatorButton>\n                                ))}\n                            </OperatorGrid>\n\n                            <ButtonGroup>\n                                <ControlButton onClick={handleClear}>\n                                    Clear\n                                </ControlButton>\n                                <ControlButton onClick={handleRemove}>\n                                    Undo\n                                </ControlButton>\n                                <ControlButton onClick={handleNewGame}>\n                                    New Game\n                                </ControlButton>\n                            </ButtonGroup>\n                        </CurrentPlayerAreaSingle>\n                    </GameAreaSingle>\n                </>\n            \n        </Container>\n    );\n};\n\nexport default GamePageSingle;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}