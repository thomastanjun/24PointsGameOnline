{"ast":null,"code":"import styled from'styled-components';import React,{useState,useEffect,useContext}from'react';import{useNavigate}from'react-router-dom';import{GameClientContext}from'../contexts/GameClientContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Container=styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n`;const RoomList=styled.div`\n  width: 100%;\n  max-width: 600px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;const RoomCard=styled.div`\n  padding: 15px;\n  border: 1px solid #d3d6da;\n  border-radius: 8px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  \n  &:hover {\n    background: #f4f4f4;\n  }\n`;const Button=styled.button`\n  padding: 10px 20px;\n  border: none;\n  border-radius: 4px;\n  background: #6aaa64;\n  color: white;\n  cursor: pointer;\n  \n  &:hover {\n    background: #5c935c;\n  }\n`;const RoomSelection=()=>{const navigate=useNavigate();const[rooms,setRooms]=useState([]);const{client}=useContext(GameClientContext);useEffect(()=>{let interval;if(client){interval=setInterval(async()=>{const response=await client.fetchRooms();if(response.status==='Empty'){setRooms([]);return;}else{console.log(\"RoomList: \",response.status);console.log(\"RoomListLength: \",response.roomList.length);setRooms(response.roomList);}},1000);}return()=>clearInterval(interval);},[client]);const handleRoomClick=async roomID=>{if(!client)return;try{const response=await client.joinGame(roomID);navigate(`/game/multi/${roomID}`);}catch(error){console.error('Error joining room:',error);}};const createRoom=async maxPlayer=>{if(!client)return;try{const roomIDResponse=await client.createRoom(maxPlayer);await client.joinGame(roomIDResponse);navigate('/game/single',{state:{mode:'single'}});}catch(error){console.error('Error creating room:',error);}};const renderRooms=()=>{if(rooms.length===0){return/*#__PURE__*/_jsx(\"p\",{children:\"No rooms available\"});}return rooms.map(room=>/*#__PURE__*/_jsxs(RoomCard,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Room \",room.roomID]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Host: \",room.hostPlayer]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Available Seats: \",room.vacancySeats]})]}),/*#__PURE__*/_jsx(Button,{onClick:()=>handleRoomClick(room.roomID),children:\"Join Room\"})]},room.roomID));};return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Game Rooms\"}),/*#__PURE__*/_jsx(Button,{onClick:()=>createRoom(\"4\"),children:\"Create New Room\"}),/*#__PURE__*/_jsx(RoomList,{children:renderRooms()})]});};export default RoomSelection;","map":{"version":3,"names":["styled","React","useState","useEffect","useContext","useNavigate","GameClientContext","jsx","_jsx","jsxs","_jsxs","Container","div","RoomList","RoomCard","Button","button","RoomSelection","navigate","rooms","setRooms","client","interval","setInterval","response","fetchRooms","status","console","log","roomList","length","clearInterval","handleRoomClick","roomID","joinGame","error","createRoom","maxPlayer","roomIDResponse","state","mode","renderRooms","children","map","room","hostPlayer","vacancySeats","onClick"],"sources":["/Users/tanjun/Documents/24PointsGameOnline/src/pages/RoomSelection.tsx"],"sourcesContent":["\nimport styled from 'styled-components';\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport GameClient from '../services/GameClient';\nimport { GameClientContext } from '../contexts/GameClientContext';\nimport {Rooms, RoomInfo} from '../GameDefinitions';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n`;\n\nconst RoomList = styled.div`\n  width: 100%;\n  max-width: 600px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nconst RoomCard = styled.div`\n  padding: 15px;\n  border: 1px solid #d3d6da;\n  border-radius: 8px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  \n  &:hover {\n    background: #f4f4f4;\n  }\n`;\n\nconst Button = styled.button`\n  padding: 10px 20px;\n  border: none;\n  border-radius: 4px;\n  background: #6aaa64;\n  color: white;\n  cursor: pointer;\n  \n  &:hover {\n    background: #5c935c;\n  }\n`;\n\nconst RoomSelection: React.FC = () => {\n  const navigate = useNavigate();\n  const [rooms, setRooms] = useState<RoomInfo[]>([]);\n  const { client } = useContext(GameClientContext);\n\n  useEffect(() => {\n    let interval: NodeJS.Timeout;\n\n    if (client) {\n      interval = setInterval(async () => {\n        const response = await client.fetchRooms();\n        if (response.status === 'Empty') {\n          setRooms([]);\n          return;\n        } else {\n          console.log(\"RoomList: \", response.status);\n          console.log(\"RoomListLength: \", response.roomList.length);\n          setRooms(response.roomList);}\n      }, 1000);}\n\n      return () => clearInterval(interval);\n    \n  }, [client]);\n\n  const handleRoomClick = async (roomID: string) => {\n    if (!client) return;\n    try {\n      const response = await client.joinGame(roomID);\n      navigate(`/game/multi/${roomID}`);\n    } catch (error) {\n      console.error('Error joining room:', error);\n    }\n  };\n\n  const createRoom = async (maxPlayer: string) => {\n    if (!client) return;\n    try {\n      const roomIDResponse = await client.createRoom(maxPlayer);\n      await client.joinGame(roomIDResponse);\n      navigate('/game/single', {\n        state: { \n         mode: 'single' } });\n\n    } catch (error) {\n      console.error('Error creating room:', error);\n    }\n  };\n\n  const renderRooms = () => {\n    if (rooms.length === 0) {\n      return <p>No rooms available</p>;\n    }\n    return rooms.map((room: RoomInfo) => (\n      <RoomCard key={room.roomID}>\n        <div>\n          <h3>Room {room.roomID}</h3>\n          <p>Host: {room.hostPlayer}</p>\n          <p>Available Seats: {room.vacancySeats}</p>\n        </div>\n        <Button onClick={() => handleRoomClick(room.roomID)}>\n          Join Room\n        </Button>\n      </RoomCard>\n    ));\n  };\n\n\n  return (\n    <Container>\n      <h1>Game Rooms</h1>\n      <Button onClick={() => createRoom(\"4\")}>Create New Room</Button>\n      \n      <RoomList>\n        {renderRooms()}\n      </RoomList>\n    </Container>\n  );\n};\n\nexport default RoomSelection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}