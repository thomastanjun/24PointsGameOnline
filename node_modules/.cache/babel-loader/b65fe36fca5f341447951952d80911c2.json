{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useContext, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { GameClientContext } from '../contexts/GameClientContext';\nexport const useGameLogic = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    client\n  } = useContext(GameClientContext);\n  const [playerName, setPlayerName] = useState((client === null || client === void 0 ? void 0 : client.getPlayerName()) || '');\n  const [formula, setFormula] = useState((client === null || client === void 0 ? void 0 : client.getCurrentPlayerFormula()) || '');\n  const [result, setResult] = useState((client === null || client === void 0 ? void 0 : client.getCurrentPlayerResult()) || '0+default');\n  const [error, setError] = useState((client === null || client === void 0 ? void 0 : client.getCurrentPlayerError()) || 'default error');\n  const [otherPlayers, setOtherPlayers] = useState({});\n  const [gameNumbers, setGameNumbers] = useState((client === null || client === void 0 ? void 0 : client.getGameNumbersString()) || []);\n  const [winner, setWinner] = useState('');\n  const [winnerFormula, setWinnerFormula] = useState('');\n  const [gameTime, setGameTime] = useState(0);\n  const [isCountingDown, setIsCountingDown] = useState(false);\n  const [count, setCount] = useState(3);\n  const updateDisplay = client => {\n    setFormula(client.getCurrentPlayerFormula());\n    //setError(client.getCurrentPlayerError());\n    setResult(client.getCurrentPlayerResult() + client.getCurrentPlayerError());\n    setGameNumbers(client.getGameNumbersString());\n    setOtherPlayers(client.getOtherPlayers());\n    setWinner(client.getWinner());\n    setWinnerFormula(client.getWinnerFormula());\n    //if (client.getWinner()) {\n    //    setWinner(client.getWinner());\n    //    setWinnerFormula(client.getWinnerFormula());\n    //}\n  };\n  const handleTokenClick = async token => {\n    if (!client) return;\n    try {\n      await client.addToken(token);\n      updateDisplay(client);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const handleRemove = async () => {\n    if (!client) return;\n    try {\n      await client.removeToken();\n      updateDisplay(client);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const handleClear = async () => {\n    if (!client) return;\n    try {\n      await client.clearFormula();\n      updateDisplay(client);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const handleNewGame = async () => {\n    if (!client) return;\n    try {\n      await client.startNewGame();\n      //setWinner('');\n      //setWinnerFormula('');\n      updateDisplay(client);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const handleLogout = async () => {\n    if (!client) return;\n    try {\n      await client.exitGame();\n      //resetGameState();\n      client.resetClient();\n      navigate('/mode-selection');\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  useEffect(() => {\n    let timer;\n    if (isCountingDown && count > 1) {\n      timer = setTimeout(() => setCount(prev => prev - 1), 1000);\n    } else if (count === 1) {\n      timer = setTimeout(() => {\n        setIsCountingDown(false);\n        setCount(3);\n      }, 1000);\n    }\n    return () => clearTimeout(timer);\n  }, [count, isCountingDown]);\n  useEffect(() => {\n    let interval;\n    if (!isCountingDown && !winner) {\n      interval = setInterval(() => {\n        setGameTime(prev => prev + 0.01);\n      }, 10);\n    }\n    return () => clearInterval(interval);\n  });\n  return {\n    client,\n    playerName,\n    formula,\n    result,\n    error,\n    otherPlayers,\n    gameNumbers,\n    winner,\n    winnerFormula,\n    gameTime,\n    isCountingDown,\n    count,\n    updateDisplay,\n    handleTokenClick,\n    handleRemove,\n    handleClear,\n    handleNewGame,\n    handleLogout\n  };\n};\n_s(useGameLogic, \"jU8S+gDRBVoUc3sZuGLEQFVF308=\", false, function () {\n  return [useNavigate];\n});","map":{"version":3,"names":["useState","useContext","useEffect","useNavigate","GameClientContext","useGameLogic","_s","navigate","client","playerName","setPlayerName","getPlayerName","formula","setFormula","getCurrentPlayerFormula","result","setResult","getCurrentPlayerResult","error","setError","getCurrentPlayerError","otherPlayers","setOtherPlayers","gameNumbers","setGameNumbers","getGameNumbersString","winner","setWinner","winnerFormula","setWinnerFormula","gameTime","setGameTime","isCountingDown","setIsCountingDown","count","setCount","updateDisplay","getOtherPlayers","getWinner","getWinnerFormula","handleTokenClick","token","addToken","console","handleRemove","removeToken","handleClear","clearFormula","handleNewGame","startNewGame","handleLogout","exitGame","resetClient","timer","setTimeout","prev","clearTimeout","interval","setInterval","clearInterval"],"sources":["/Users/tanjun/Documents/24PointsGameOnline/src/hooks/useGameLogic.ts"],"sourcesContent":["import { useState, useContext, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { GameClientContext } from '../contexts/GameClientContext';\nimport GameClient from '../services/GameClient';\n\nexport const useGameLogic = () => {\n    const navigate = useNavigate();\n    const { client } = useContext(GameClientContext);\n    \n    const [playerName, setPlayerName] = useState(client?.getPlayerName() || '');\n    const [formula, setFormula] = useState(client?.getCurrentPlayerFormula() || '');\n    const [result, setResult] = useState(client?.getCurrentPlayerResult() || '0+default');\n    const [error, setError] = useState(client?.getCurrentPlayerError() || 'default error');\n    const [otherPlayers, setOtherPlayers] = useState<{ [playerName: string]: { formula: string, value: string } }>({});\n    const [gameNumbers, setGameNumbers] = useState<string[]>(client?.getGameNumbersString() || []);\n    const [winner, setWinner] = useState<string>('');\n    const [winnerFormula, setWinnerFormula] = useState<string>('');\n    const [gameTime, setGameTime] = useState<number>(0);\n    const [isCountingDown, setIsCountingDown] = useState(false);\n    const [count, setCount] = useState(3);\n\n    const updateDisplay = (client: GameClient) => {\n        setFormula(client.getCurrentPlayerFormula());\n        //setError(client.getCurrentPlayerError());\n        setResult(client.getCurrentPlayerResult() + client.getCurrentPlayerError());\n        setGameNumbers(client.getGameNumbersString());\n        setOtherPlayers(client.getOtherPlayers());\n        setWinner(client.getWinner());\n        setWinnerFormula(client.getWinnerFormula());\n        //if (client.getWinner()) {\n        //    setWinner(client.getWinner());\n        //    setWinnerFormula(client.getWinnerFormula());\n        //}\n    };\n\n    const handleTokenClick = async (token: string) => {\n        if (!client) return;\n        try {\n            await client.addToken(token);\n            updateDisplay(client);\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    };\n\n    const handleRemove = async () => {\n        if (!client) return;\n        try {\n            await client.removeToken();\n            updateDisplay(client);\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    };\n\n    const handleClear = async () => {\n        if (!client) return;\n        try {\n            await client.clearFormula();\n            updateDisplay(client);\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    };\n\n    const handleNewGame = async () => {\n        if (!client) return;\n        try {\n            await client.startNewGame();\n            //setWinner('');\n            //setWinnerFormula('');\n            updateDisplay(client);\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    };\n\n    const handleLogout = async () => {\n        if (!client) return;\n        try {\n            await client.exitGame();\n            //resetGameState();\n            client.resetClient();\n            navigate('/mode-selection');\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    };\n\n    useEffect(() => {\n        let timer: NodeJS.Timeout;\n        if (isCountingDown && count > 1) {\n            timer = setTimeout(() => setCount(prev => prev - 1), 1000);\n        } else if (count === 1) {\n            timer = setTimeout(() => {\n                setIsCountingDown(false);\n                setCount(3); \n            }, 1000);\n        }\n        return () => clearTimeout(timer);\n    }, [count, isCountingDown]);\n\n    useEffect(() => {\n        let interval: NodeJS.Timeout;\n        if (!isCountingDown && !winner) {\n            interval = setInterval(() => {\n                    setGameTime(prev => prev + 0.01);\n            },10);\n        }\n        return () => clearInterval(interval);\n    });\n\n    return {\n        client,\n        playerName,\n        formula,\n        result,\n        error,\n        otherPlayers,\n        gameNumbers,\n        winner,\n        winnerFormula,\n        gameTime,\n        isCountingDown,\n        count,\n        updateDisplay,\n        handleTokenClick,\n        handleRemove,\n        handleClear,\n        handleNewGame,\n        handleLogout\n    }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}