{"ast":null,"code":"import React from'react';import{useContext}from'react';import{GameClientContext}from'../contexts/GameClientContext';import{useNavigate,useLocation}from'react-router-dom';import styled from'styled-components';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Container=styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  padding: 20px;\n`;const Title=styled.h2`\n  font-size: 32px;\n  color: #1a1a1b;\n  margin-bottom: 30px;\n`;const ModeButton=styled.button`\n  width: 200px;\n  padding: 20px;\n  margin: 10px;\n  font-size: 18px;\n  font-weight: bold;\n  background: white;\n  border: 2px solid #d3d6da;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.2s;\n\n  &:hover {\n    background: #f4f4f4;\n    transform: translateY(-2px);\n  }\n`;const ModeDescription=styled.p`\n  font-size: 14px;\n  color: #666;\n  margin-top: 5px;\n`;const ModeSelection=()=>{const navigate=useNavigate();const location=useLocation();console.log(\"Location state: \",location.state);const{client}=useContext(GameClientContext);const handleSingleMode=async()=>{console.log(\"ModeSelection Player: \",client===null||client===void 0?void 0:client.getPlayerName());if(!client){return;}const roomID=await client.createRoom('1');await client.joinGame(roomID);navigate('/game/single',{state:{mode:'single'}});};const handleMultiMode=isSinglePlayer=>{console.log(\"ModeSelection Player: \",client===null||client===void 0?void 0:client.getPlayerName());navigate('/rooms',{state:{mode:'single'}});};return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Title,{children:\"Select Game Mode\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(ModeButton,{onClick:()=>handleSingleMode(),children:[\"Single Player\",/*#__PURE__*/_jsx(ModeDescription,{children:\"Practice by yourself\"})]}),/*#__PURE__*/_jsxs(ModeButton,{onClick:()=>handleMultiMode(false),children:[\"Multiplayer\",/*#__PURE__*/_jsx(ModeDescription,{children:\"Compete with other players\"})]})]})]});};export default ModeSelection;","map":{"version":3,"names":["React","useContext","GameClientContext","useNavigate","useLocation","styled","jsx","_jsx","jsxs","_jsxs","Container","div","Title","h2","ModeButton","button","ModeDescription","p","ModeSelection","navigate","location","console","log","state","client","handleSingleMode","getPlayerName","roomID","createRoom","joinGame","mode","handleMultiMode","isSinglePlayer","children","onClick"],"sources":["/Users/tanjun/Documents/24PointsGameOnline/src/pages/ModeSelection.tsx"],"sourcesContent":["import React from 'react';\nimport { useContext } from 'react';\nimport { GameClientContext } from '../contexts/GameClientContext';\n\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport GameClient from '../services/GameClient';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  padding: 20px;\n`;\n\nconst Title = styled.h2`\n  font-size: 32px;\n  color: #1a1a1b;\n  margin-bottom: 30px;\n`;\n\nconst ModeButton = styled.button`\n  width: 200px;\n  padding: 20px;\n  margin: 10px;\n  font-size: 18px;\n  font-weight: bold;\n  background: white;\n  border: 2px solid #d3d6da;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.2s;\n\n  &:hover {\n    background: #f4f4f4;\n    transform: translateY(-2px);\n  }\n`;\n\nconst ModeDescription = styled.p`\n  font-size: 14px;\n  color: #666;\n  margin-top: 5px;\n`;\n\n\nconst ModeSelection: React.FC = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  console.log(\"Location state: \", location.state);\n  \n  const { client } = useContext(GameClientContext);\n\n\n  const handleSingleMode = async() => {\n    console.log(\"ModeSelection Player: \", client?.getPlayerName());\n    if (!client) {\n      return;\n    }\n    const roomID = await client.createRoom('1');\n    await client.joinGame(roomID);\n    navigate('/game/single', {\n       state: { \n        mode: 'single' } });\n  };\n\n  const handleMultiMode = (isSinglePlayer: boolean) => {\n    console.log(\"ModeSelection Player: \", client?.getPlayerName());\n    navigate('/rooms', {\n       state: { \n        mode: 'single' } });\n  };\n\n  return (\n    <Container>\n      <Title>Select Game Mode</Title>\n      <div>\n        <ModeButton onClick={() => handleSingleMode()}>\n          Single Player\n          <ModeDescription>Practice by yourself</ModeDescription>\n        </ModeButton>\n        \n        <ModeButton onClick={() => handleMultiMode(false)}>\n          Multiplayer\n          <ModeDescription>Compete with other players</ModeDescription>\n        </ModeButton>\n      </div>\n    </Container>\n  );\n};\n\nexport default ModeSelection;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,UAAU,KAAQ,OAAO,CAClC,OAASC,iBAAiB,KAAQ,+BAA+B,CAEjE,OAASC,WAAW,CAAEC,WAAW,KAAQ,kBAAkB,CAC3D,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAGvC,KAAM,CAAAC,SAAS,CAAGL,MAAM,CAACM,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAC,KAAK,CAAGP,MAAM,CAACQ,EAAE;AACvB;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAC,UAAU,CAAGT,MAAM,CAACU,MAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAC,eAAe,CAAGX,MAAM,CAACY,CAAC;AAChC;AACA;AACA;AACA,CAAC,CAGD,KAAM,CAAAC,aAAuB,CAAGA,CAAA,GAAM,CACpC,KAAM,CAAAC,QAAQ,CAAGhB,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAiB,QAAQ,CAAGhB,WAAW,CAAC,CAAC,CAC9BiB,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAEF,QAAQ,CAACG,KAAK,CAAC,CAE/C,KAAM,CAAEC,MAAO,CAAC,CAAGvB,UAAU,CAACC,iBAAiB,CAAC,CAGhD,KAAM,CAAAuB,gBAAgB,CAAG,KAAAA,CAAA,GAAW,CAClCJ,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAEE,MAAM,SAANA,MAAM,iBAANA,MAAM,CAAEE,aAAa,CAAC,CAAC,CAAC,CAC9D,GAAI,CAACF,MAAM,CAAE,CACX,OACF,CACA,KAAM,CAAAG,MAAM,CAAG,KAAM,CAAAH,MAAM,CAACI,UAAU,CAAC,GAAG,CAAC,CAC3C,KAAM,CAAAJ,MAAM,CAACK,QAAQ,CAACF,MAAM,CAAC,CAC7BR,QAAQ,CAAC,cAAc,CAAE,CACtBI,KAAK,CAAE,CACNO,IAAI,CAAE,QAAS,CAAE,CAAC,CAAC,CACzB,CAAC,CAED,KAAM,CAAAC,eAAe,CAAIC,cAAuB,EAAK,CACnDX,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAEE,MAAM,SAANA,MAAM,iBAANA,MAAM,CAAEE,aAAa,CAAC,CAAC,CAAC,CAC9DP,QAAQ,CAAC,QAAQ,CAAE,CAChBI,KAAK,CAAE,CACNO,IAAI,CAAE,QAAS,CAAE,CAAC,CAAC,CACzB,CAAC,CAED,mBACErB,KAAA,CAACC,SAAS,EAAAuB,QAAA,eACR1B,IAAA,CAACK,KAAK,EAAAqB,QAAA,CAAC,kBAAgB,CAAO,CAAC,cAC/BxB,KAAA,QAAAwB,QAAA,eACExB,KAAA,CAACK,UAAU,EAACoB,OAAO,CAAEA,CAAA,GAAMT,gBAAgB,CAAC,CAAE,CAAAQ,QAAA,EAAC,eAE7C,cAAA1B,IAAA,CAACS,eAAe,EAAAiB,QAAA,CAAC,sBAAoB,CAAiB,CAAC,EAC7C,CAAC,cAEbxB,KAAA,CAACK,UAAU,EAACoB,OAAO,CAAEA,CAAA,GAAMH,eAAe,CAAC,KAAK,CAAE,CAAAE,QAAA,EAAC,aAEjD,cAAA1B,IAAA,CAACS,eAAe,EAAAiB,QAAA,CAAC,4BAA0B,CAAiB,CAAC,EACnD,CAAC,EACV,CAAC,EACG,CAAC,CAEhB,CAAC,CAED,cAAe,CAAAf,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}