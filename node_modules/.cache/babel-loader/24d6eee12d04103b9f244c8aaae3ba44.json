{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001';\nexport const useOnlinePlayerCount = () => {\n  _s();\n  const [onlinePlayers, setOnlinePlayers] = useState(0);\n  useEffect(() => {\n    const fetchCount = async () => {\n      try {\n        const response = await fetch(`${BASE_URL}/players/count`);\n        if (!response.ok) {\n          console.error('Server response:', response.status, response.statusText);\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const count = await response.json();\n        setOnlinePlayers(count);\n      } catch (error) {\n        console.error('Error fetching online player number:', error);\n        throw error;\n      }\n    };\n    fetchCount();\n    console.log(\"useOnlinePlayerCount: Fetching online player count\");\n    const interval = setInterval(fetchCount, 100);\n    return () => clearInterval(interval);\n  }, []);\n  return onlinePlayers;\n};\n_s(useOnlinePlayerCount, \"4c685lES4KWDv/XfJwbfWqiLkbM=\");","map":{"version":3,"names":["useState","useEffect","BASE_URL","process","env","REACT_APP_API_URL","useOnlinePlayerCount","_s","onlinePlayers","setOnlinePlayers","fetchCount","response","fetch","ok","console","error","status","statusText","Error","count","json","log","interval","setInterval","clearInterval"],"sources":["/Users/tanjun/Documents/24PointsGameOnline/src/hooks/useOnlinePlayerCount.ts"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Input } from '../components/GameStyles';\n\nconst BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001';\n\nexport const useOnlinePlayerCount = () => {\n    const [onlinePlayers, setOnlinePlayers] = useState<number>(0);\n    \n    useEffect(() => {\n        const fetchCount = async () => {\n            try {\n                const response = await fetch(`${BASE_URL}/players/count`);\n    \n                if (!response.ok) {\n                    console.error('Server response:', response.status, response.statusText);\n                    throw new Error(`HTTP error! status: ${response.status}`);\n                }\n                const count = await response.json();\n                setOnlinePlayers(count);                \n            } catch (error) {\n                console.error('Error fetching online player number:', error);\n                throw error;\n            }\n        }\n\n        fetchCount();\n        console.log(\"useOnlinePlayerCount: Fetching online player count\");\n        const interval = setInterval(fetchCount, 100);\n        return () => clearInterval(interval);\n\n    }, []);\n\n    return onlinePlayers;\n};\n\n"],"mappings":";AAAA,SAAgBA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAGlD,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAEzE,OAAO,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAS,CAAC,CAAC;EAE7DC,SAAS,CAAC,MAAM;IACZ,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGV,QAAQ,gBAAgB,CAAC;QAEzD,IAAI,CAACS,QAAQ,CAACE,EAAE,EAAE;UACdC,OAAO,CAACC,KAAK,CAAC,kBAAkB,EAAEJ,QAAQ,CAACK,MAAM,EAAEL,QAAQ,CAACM,UAAU,CAAC;UACvE,MAAM,IAAIC,KAAK,CAAC,uBAAuBP,QAAQ,CAACK,MAAM,EAAE,CAAC;QAC7D;QACA,MAAMG,KAAK,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QACnCX,gBAAgB,CAACU,KAAK,CAAC;MAC3B,CAAC,CAAC,OAAOJ,KAAK,EAAE;QACZD,OAAO,CAACC,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;QAC5D,MAAMA,KAAK;MACf;IACJ,CAAC;IAEDL,UAAU,CAAC,CAAC;IACZI,OAAO,CAACO,GAAG,CAAC,oDAAoD,CAAC;IACjE,MAAMC,QAAQ,GAAGC,WAAW,CAACb,UAAU,EAAE,GAAG,CAAC;IAC7C,OAAO,MAAMc,aAAa,CAACF,QAAQ,CAAC;EAExC,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOd,aAAa;AACxB,CAAC;AAACD,EAAA,CA5BWD,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module"}